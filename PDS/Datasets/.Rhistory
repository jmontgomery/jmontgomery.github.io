library(ggplot2)
setwd("~/GitHub/jmontgomery.github.io/PDS/Slides")
primaryPolls<-read.csv("president_primary_polls_foeb2020.csv", stringsAsFactors = FALSE)
primaryPolls<-read.csv("president_primary_polls_feb2020.csv", stringsAsFactors = FALSE)
colnames(primaryPolls)
primaryPolls$start_date
primaryPolls$start_date<-as.Date(primaryPolls$start_date)
primaryPolls$start_date
primaryPolls$start_date<-as.Date(primaryPolls$start_date)
primaryPolls$start_date
primaryPolls<-read.csv("president_primary_polls_feb2020.csv", stringsAsFactors = FALSE)
colnames(primaryPolls)
primaryPolls$start_date#<-as.Date(primaryPolls$start_date)
as.Date(primaryPolls$start_date, "%m/%d/%Y")
temp<-as.Date(primaryPolls$start_date, "%m/%d/%Y")
colnames(primaryPolls)
head(primaryPolls)
plot(temp, primaryPolls$pct)
primaryPolls$state
primaryPolls$state=="New Hampshire"
primaryPolls<-primaryPolls[primaryPolls$state=="New Hampshire",]
primaryPolls[primaryPolls$candidate_name%in%c("Amy Klobuchar"),]
primaryPolls[primaryPolls$candidate_name%in%c("Amy Klobuchar", "Andrew Yant"),]
primaryPolls[primaryPolls$candidate_name%in%c("Amy Klobuchar", "Andrew Yang"),]
primaryPolls[primaryPolls$candidate_name%in%c("Amy Klobuchar", "Andrew Yang", "Bernard Sanders", "Elizabeth Warren"),]
primaryPolls[primaryPolls$candidate_name%in%c("Amy Klobuchar", "Andrew Yang", "Bernard Sanders", "Elizabeth Warren", "Joseph R. Biden Jr."),]
primaryPolls[primaryPolls$candidate_name%in%c("Amy Klobuchar", "Andrew Yang", "Bernard Sanders", "Elizabeth Warren", "Joseph R. Biden Jr.", "Michael Bloomberg"),]
primaryPolls[primaryPolls$candidate_name%in%c("Amy Klobuchar", "Andrew Yang", "Bernard Sanders", "Elizabeth Warren", "Joseph R. Biden Jr.", "Michael Bloomberg", "Pete Buttigieg"),]
primaryPolls<-primaryPolls[primaryPolls$candidate_name%in%c("Amy Klobuchar", "Andrew Yang", "Bernard Sanders", "Elizabeth Warren", "Joseph R. Biden Jr.", "Michael Bloomberg", "Pete Buttigieg"),]
primaryPolls<-read.csv("president_primary_polls_feb2020.csv", stringsAsFactors = FALSE)
primaryPolls$start_date<-as.Date(primaryPolls$start_date, "%m/%d/%Y")
primaryPolls<-primaryPolls[primaryPolls$state=="New Hampshire",]
primaryPolls<-primaryPolls[primaryPolls$candidate_name%in%c("Amy Klobuchar", "Bernard Sanders", "Elizabeth Warren", "Joseph R. Biden Jr.", "Michael Bloomberg", "Pete Buttigieg"),]
ggplot(data=primaryPolls)+
geom_point(mapping = aes(x=start_date, y=pct)) +
facet_wrap(methodology ~ candidate_name, nrow=2)
ggplot(data=primaryPolls)+
geom_point(mapping = aes(x=start_date, y=pct)) +
facet_wrap(population ~ candidate_name, nrow=2)
ggplot(data=primaryPolls)+
geom_point(mapping = aes(x=start_date, y=pct)) +
facet_wrap(population ~ candidate_name, nrow=4)
test<-read.csv("https://raw.githubusercontent.com/kosukeimai/qss/master/CAUSALITY/resume.csv")
table(test$firstname)
resume<-read.csv("https://raw.githubusercontent.com/kosukeimai/qss/master/CAUSALITY/resume.csv")
test
setwd("~/GitHub/jmontgomery.github.io/PDS/Datasets")
write.csv("resume.csv")
write.csv(test, "resume.csv")
resume<-read.csv("http://politicaldatascience.com/PDS/Datasets/resume.csv")
resume<-read.csv("https://politicaldatascience.com/PDS/Datasets/resume.csv")
turnout<-read.csv("http://politicaldatascience.com/PDS/Datasets/SimpleTurnout2008.csv")
resume<-read.csv("https://politicaldatascience.com/PDS/Datasets/resume.csv")
resume<-read.csv("~/Github/jmontgomery.github.io/PDS/Datasets/resume.csv")
install.packages("faraway")
library(faraway)
data(newhamp)
help(newhamp)
summary(lm(Obama~votesys, data=newhamp))
library(tidyverse)
summary(lm(pObama~votesys, data=newhamp))
newhamp %>% group_by(white) %>%
summarize(Mean = mean(pObama, na.rm=TRUE))
temp<-newhamp %>% group_by(white) %>%
summarize(Mean = mean(pObama, na.rm=TRUE))
plot(temp$white, Mean)
plot(temp$white, temp$Mean)
temp<-newhamp %>% group_by(white) %>%
summarize(Mean = mean(votesys, na.rm=TRUE))
plot(temp$white, temp$Mean)
temp<-newhamp %>% group_by(white) %>%
summarize(Mean = mean(votesys, na.rm=TRUE))
warnings(0)
temp<-newhamp %>% group_by(votesys) %>%
summarize(Mean = mean(white, na.rm=TRUE))
temp
temp<-newhamp %>% group_by(votesys) %>%
summarize(Mean = mean(pci, na.rm=TRUE))
temp
temp<-newhamp %>% group_by(votesys) %>%
summarize(Mean = mean(white, na.rm=TRUE), SD=sd(white, na.rm=TRUE))
newhamp %>% group_by(votesys) %>%
summarize(Mean = mean(white, na.rm=TRUE), SD=sd(white, na.rm=TRUE))
summary(lm(pObama~votesys + white + pci, data=newhamp))
summary(lm(pObama~votesys + Dean + white + pci, data=newhamp))
newhamp %>% group_by(votesys) %>%
summarize(White = mean(white, na.rm=TRUE),
Income=mean(pci, na.rm=TRUE),
Dean = mean(Dean, na.rm=TRUE))
summary(lm(pObama~votesys + Dean + white + pci, data=newhamp))
palestinians<- read.csv("https://jmontgomery.github.io/ProblemSets/longo.csv")
congress <- read.csv("https://jmontgomery.github.io/ProblemSets/incumbents_subset.csv")
congress <- read.csv("https://jmontgomery.github.io/ProblemSets/incumbents.csv")
summary(lm(voteshare~chalspend, data=congress))
summary(lm(voteshare~incspend +, data=congress))
summary(lm(voteshare~incspend + chalspend, data=congress))
summary(lm(voteshare~incspend + chalspend + chalquality, data=congress))
summary(lm(voteshare~incspend + chalspend + chalquality + presvote, data=congress))
congress%>%group_by(chalquality) %>%
summarize(Mean = mean(incspend, na.rm=TRUE))
summary(congress$incspend)
data(titanic)
str(titanic)
isntall.package("titanic")
install.package("titanic")
install.packages("titanic")
library(titanic)
data("Titanic")
str(Titanic)
summary(lm(Survived~Sex, data=Titanic))
Titanic$dv<-as.numeric(Titanic$Survivived)
as.numeric(Titanic$Survivived)
as.numeric(Titanic$Survived)
Titanic$Survived
class(Titanic)
data(titanic)
titanic::titanic_train
str(Titanic$Train)
str(titanic_train)
str(titanic_test)
data(titanic)
titanic::titanic_train
summary(lm(Survived~Sex, data=titanic_train))
summary(lm(Survived~Sex + as.factor(Class), data=titanic_train))
?titanic_train
summary(lm(Survived~Sex + as.factor(Class), data=titanic_train))
summary(lm(Survived~Sex + as.factor(PClass), data=titanic_train))
summary(lm(Survived~Sex + as.factor(Pclass), data=titanic_train))
data("fatalities")
data("Fatalities")
install.packages("AER")
install.packages("AER")
data("Fatalities")
library(AER)
data("Fatalities")
summary(lm(fatal_rate ~ beertax, data=Fatalitiesa)
titanic::titanic_train
str(titanic)
library(titanic)
as.numeric(Titanic$Survived)
class(Titanic)
str(titanic_train)
str(titanic_test)
summary(lm(Survived~Sex + as.factor(Pclass), data=titanic_train))
titanic_train$
palestinians<- read.csv("https://jmontgomery.github.io/ProblemSets/longo.csv")
summary(lm(pObama~votesys + Dean + white + pci, data=newhamp))
summary(lm(fatal_rate ~ beertax, data=Fatalities))
data("Fatalities")
summary(lm(fatal_rate ~ beertax, data=Fatalities))
Fatalities$fatal_rate <- Fatalities$fatal / Fatalities$pop * 10000
summary(lm(fatal_rate ~ beertax, data=Fatalities))
summary(lm(fatal_rate ~ beertax + state - 1, data=Fatalities))
head(model2)
model2<-summary(lm(fatal_rate ~ beertax + state - 1, data=Fatalities))
head(model2)
head(model2$coefficients)
summary(lm(fatal_rate ~ beertax, data=Fatalities))
model2<-summary(lm(fatal_rate ~ beertax + state - 1, data=Fatalities))
head(model2$coefficients)
Fatalities_demeaned <- with(Fatalities,
data.frame(fatal_rate = fatal_rate - ave(fatal_rate, state),
beertax = beertax - ave(beertax, state)))
summary(lm(fatal_rate ~ beertax - 1, data = Fatalities_demeaned))
titanic_train$
palestinians<- read.csv("https://jmontgomery.github.io/ProblemSets/longo.csv")
titanic_train$
palestinians<- read.csv("https://jmontgomery.github.io/ProblemSets/longo.csv")
palestinians<- read.csv("https://jmontgomery.github.io/ProblemSets/longo.csv")
summary(lm(militancy ~Sample2009 + ZA + ZA*Sample2009, data=palestinians))
hist(congress$chalspend)
plot(congress$chalspend)
plot(congress$chalspend)
hist(congress$chalspend)
table(palestinians$ZA)
